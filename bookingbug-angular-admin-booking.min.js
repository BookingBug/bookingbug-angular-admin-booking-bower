"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}angular.module("BBAdminBooking",["BB","BBAdmin.Services","BBAdminServices","trNgGrid"]),angular.module("BBAdminBooking.Directives",[]),angular.module("BBAdminBooking.Services",["ngResource","ngSanitize"]),angular.module("BBAdminBooking.Controllers",["ngLocalData","ngSanitize"]),angular.module("BBAdminBooking").config(function($logProvider){"ngInject";$logProvider.debugEnabled(!0)}),angular.module("BBAdminBooking").run(function($rootScope,$log,DebugUtilsService,$bbug,$document,$sessionStorage,FormDataStoreService,AppConfig,BBModel){"ngInject";BBModel.Admin.Login.$checkLogin().then(function(){if($rootScope.user&&$rootScope.user.company_id)return $rootScope.bb||($rootScope.bb={}),$rootScope.bb.company_id=$rootScope.user.company_id})}),window.Collection.Client=function(_window$Collection$Ba){function Client(){return _classCallCheck(this,Client),_possibleConstructorReturn(this,_window$Collection$Ba.apply(this,arguments))}return _inherits(Client,_window$Collection$Ba),Client.prototype.checkItem=function(item){var _window$Collection$Ba2;return(_window$Collection$Ba2=_window$Collection$Ba.prototype.checkItem).call.apply(_window$Collection$Ba2,[this].concat(Array.prototype.slice.call(arguments)))},Client}(window.Collection.Base),angular.module("BB.Services").provider("ClientCollections",function(){return{$get:function(){return new window.BaseCollections}}}),angular.module("BBAdminBooking").component("bbAdminResourcesDropdown",{bindings:{formCtrl:"<"},controller:"BBAdminResourcesDropdownCtrl",controllerAs:"$bbAdminResourcesDropdownCtrl",require:{$bbCtrl:"^^bbAdminBooking"},templateUrl:"admin-booking/admin_resources_dropdown.html"});var BBAdminResourcesDropdownCtrl=function(BBAssets,$rootScope,$scope){"ngInject";var _this=this,resource=void 0;this.pickedResource=null,this.resources=[],this._resourceChangedUnSubscribe=null,this.$onInit=function(){_this.changeResource=changeResource,BBAssets.getAssets(_this.$bbCtrl.$scope.bb.company).then(setLoadedResources),_this._resourceChangedUnSubscribe=$scope.$on("bbAdminResourcesDropdown:resourceChanged",resourceChangedListener)},this.$onDestroy=function(){_this._resourceChangedUnSubscribe()};var resourceChangedListener=function(event){if(null==_this.pickedResource)return delete _this.$bbCtrl.$scope.bb.current_item.resource,void delete _this.$bbCtrl.$scope.bb.current_item.person;for(var type=_this.pickedResource.split("_")[1],resourceKey=0;resourceKey<_this.resources.length;resourceKey++)if(resource=_this.resources[resourceKey],resource.identifier===_this.pickedResource){"p"===type?(_this.$bbCtrl.$scope.bb.current_item.person=resource,_this.pickedResource=resource,delete _this.$bbCtrl.$scope.bb.current_item.resource):"r"===type&&(_this.$bbCtrl.$scope.bb.current_item.resource=resource,_this.pickedResource=resource,delete _this.$bbCtrl.$scope.bb.current_item.person);break}},setLoadedResources=function(resources){_this.resources=resources,setCurrentResource()},setCurrentResource=function(){null!=_this.$bbCtrl.$scope.bb.current_item.person&&null!=_this.$bbCtrl.$scope.bb.current_item.person.id?(_this.pickedResource=_this.$bbCtrl.$scope.bb.current_item.person,_this.pickedResource.identifier=_this.$bbCtrl.$scope.bb.current_item.person.id+"_p"):null!=_this.$bbCtrl.$scope.bb.current_item.resource&&null!=_this.$bbCtrl.$scope.bb.current_item.resource.id&&(_this.pickedResource=_this.$bbCtrl.$scope.bb.current_item.resource,_this.pickedResource.identifier=_this.$bbCtrl.$scope.bb.current_item.resource.id+"_r")},changeResource=function(){$rootScope.$broadcast("bbAdminResourcesDropdown:resourceChanged")}};angular.module("BBAdminBooking").controller("BBAdminResourcesDropdownCtrl",BBAdminResourcesDropdownCtrl),angular.module("BB.Directives").directive("bbAdminCalendar",function(){return{restrict:"AE",replace:!0,scope:!0,controller:"BBAdminCalendarCtrl"}});var BBAdminCalendarCtrl=function($scope,$element,$controller,$attrs,BBModel,$rootScope){return angular.extend(this,$controller("TimeList",{$scope:$scope,$attrs:$attrs,$element:$element})),$scope.calendar_view={next_available:!1,day:!1,multi_day:!1},$rootScope.connection_started.then(function(){return $scope.initialise()}),$scope.initialise=function(){if($scope.bb.item_defaults.pick_first_time?$scope.switchView("next_available"):null!=$scope.bb.current_item.defaults.time?$scope.switchView("day"):$scope.switchView($scope.bb.item_defaults.day_view||"multi_day"),$scope.bb.current_item.person&&($scope.person_name=$scope.bb.current_item.person.name),$scope.bb.current_item.resource)return $scope.resource_name=$scope.bb.current_item.resource.name},$scope.$on("slotChanged",function(event,date){$scope.$emit("slotChanged:updateModalTitle",date)}),$scope.switchView=function(view){if("day"===view&&$scope.slots&&$scope.bb.current_item.time){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from($scope.slots)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var slot=_step.value;if(slot.time===$scope.bb.current_item.time.time){$scope.highlightSlot(slot,$scope.bb.current_item.date);break}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}}for(var key in $scope.calendar_view)$scope.calendar_view[key]=!1;return $scope.calendar_view[view]=!0},$scope.pickTime=function(slot){return $scope.bb.current_item.setDate({date:slot.datetime}),$scope.bb.current_item.setTime(slot),$scope.setLastSelectedDate(slot.datetime),$scope.bb.current_item.reserve_ready?$scope.addItemToBasket().then(function(){return $scope.decideNextPage()}):$scope.decideNextPage()},$scope.pickOtherTime=function(){return $scope.availability_conflict=!1},$scope.setCloseBookings=function(bookings){return $scope.other_bookings=bookings},$scope.overBook=function(){var new_timeslot=new BBModel.TimeSlot({time:$scope.bb.current_item.defaults.time,avail:1}),new_day=new BBModel.Day({date:$scope.bb.current_item.defaults.datetime,spaces:1});return $scope.setLastSelectedDate(new_day.date),$scope.bb.current_item.setDate(new_day),$scope.bb.current_item.setTime(new_timeslot),$scope.bb.current_item.setPerson($scope.bb.current_item.defaults.person),$scope.bb.current_item.setResource($scope.bb.current_item.defaults.resource),$scope.bb.current_item.reserve_ready?$scope.addItemToBasket().then(function(){return $scope.decideNextPage()}):$scope.decideNextPage()}};angular.module("BB.Controllers").controller("BBAdminCalendarCtrl",BBAdminCalendarCtrl),angular.module("BB.Directives").directive("bbAdminCalendarConflict",function(){return{restrict:"AE",replace:!0,scope:!0,controller:BBAdminCalendarConflictCtrl}});var BBAdminCalendarConflictCtrl=function($scope,$element,$controller,$attrs,BBModel,bbAnalyticsPiwik,$window){"ngInject";bbAnalyticsPiwik.isEnabled()&&function(){bbAnalyticsPiwik.push(["trackEvent",["Availability Conflict"],"Pop Up"])}();var time=$scope.bb.current_item.defaults.time,duration=$scope.bb.current_item.duration,start_datetime=$scope.bb.current_item.defaults.datetime,service=$scope.bb.current_item.service,min_time=start_datetime.clone().add(-(service.pre_time||0),"minutes"),max_time=start_datetime.clone().add(duration+(service.post_time||0),"minutes"),st=time-30,en=time+duration+30,ibest_earlier=0,ibest_later=0;if($scope.allow_overbook=$scope.bb.company.settings.has_overbook,$scope.slots){var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=Array.from($scope.slots)[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var slot=_step2.value;time>slot.time&&(ibest_earlier=slot.time,$scope.best_earlier=slot),0===ibest_later&&slot.time>time&&(ibest_later=slot.time,$scope.best_later=slot)}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}}ibest_earlier>0&&ibest_later>0&&ibest_earlier>time-duration&&ibest_later<time+duration&&($scope.step_mismatch=!0),$scope.checking_conflicts=!0;var params={src:$scope.bb.company,person_id:function(){return null!=$scope.bb.current_item.person?$scope.bb.current_item.person.id:null!=$scope.bb.current_item.defaults.person?$scope.bb.current_item.defaults.person.id:void 0}(),resource_id:$scope.bb.current_item.defaults.resource?$scope.bb.current_item.defaults.resource_id:void 0,start_date:$scope.bb.current_item.defaults.datetime.format("YYYY-MM-DD"),start_time:sprintf("%02d:%02d",st/60,st%60),end_time:sprintf("%02d:%02d",en/60,en%60)};BBModel.Admin.Booking.$query(params).then(function(bookings){return bookings.items.length>0&&($scope.nearby_bookings=_.filter(bookings.items,function(x){return $scope.bb.current_item.defaults.person&&x.person_id===$scope.bb.current_item.defaults.person.id||$scope.bb.current_item.defaults.resources&&x.resources_id===$scope.bb.current_item.defaults.resources.id}),$scope.overlapping_bookings=_.filter($scope.nearby_bookings,function(x){var b_st=moment(x.datetime).subtract(-(x.pre_time||0),"minutes"),b_en=moment(x.end_datetime).subtract(x.post_time||0,"minutes");return b_st.isBefore(max_time)&&b_en.isAfter(min_time)}),0===$scope.nearby_bookings.length&&($scope.nearby_bookings=!1),0===$scope.overlapping_bookings.length&&($scope.overlapping_bookings=!1)),!$scope.overlapping_bookings&&$scope.bb.company.$has("external_bookings")&&(params={start:$scope.bb.current_item.defaults.datetime.format("YYYY-MM-DD"),end:$scope.bb.current_item.defaults.datetime.clone().add(1,"day").format("YYYY-MM-DD"),person_id:$scope.bb.current_item.defaults.person?$scope.bb.current_item.defaults.person.id:void 0,resource_id:$scope.bb.current_item.defaults.resource?$scope.bb.current_item.defaults.resource_id:void 0},$scope.bb.company.$get("external_bookings",params).then(function(collection){if((bookings=collection.external_bookings)&&bookings.length>0)return $scope.external_bookings=_.filter(bookings,function(x){return x.start_time=moment(x.start),x.end_time=moment(x.end),x.title||(x.title="Blocked"),x.start_time.isBefore(max_time)&&x.end_time.isAfter(min_time)})})),$scope.checking_conflicts=!1},function(err){return $scope.checking_conflicts=!1})},_slicedToArray=function(){function sliceIterator(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return sliceIterator(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){function AdminBookingClientsCtrl($rootScope,$scope,$q,$log,$translate,$timeout,AlertService,ValidatorService,BBModel,LoadingService,AdminBookingOptions){"ngInject";$scope.emailPattern=ValidatorService.getEmailPattern(),$scope.admin_options=AdminBookingOptions,$scope.clients=new BBModel.Pagination({page_size:10,max_size:5,request_page_size:10});var loader=LoadingService.$loader($scope);$scope.sort_by_options=[{key:"first_name",name:$translate.instant("ADMIN_BOOKING.CUSTOMER.SORT_BY_FIRST_NAME")},{key:"last_name",name:$translate.instant("ADMIN_BOOKING.CUSTOMER.SORT_BY_LAST_NAME")},{key:"email",name:$translate.instant("ADMIN_BOOKING.CUSTOMER.SORT_BY_EMAIL")}],$scope.sort_by=$scope.sort_by_options[0].key,$rootScope.connection_started.then(function(){return $scope.clearClient()}),$scope.typeAheadSelectIf=function($event){var result=!1;return 13!==$event.keyCode&&32!==$event.keyCode||(result=!0),result},$scope.selectClient=function(client,route){return $scope.setClient(client),$scope.client.setValid(!0),$scope.decideNextPage(route)},$scope.createClient=function(route){return loader.notLoaded(),$scope.bb&&$scope.bb.parent_client&&($scope.client.parent_client_id=$scope.bb.parent_client.id),$scope.client_details&&$scope.client.setClientDetails($scope.client_details),BBModel.Client.$create_or_update($scope.bb.company,$scope.client).then(function(client){return loader.setLoaded(),$scope.selectClient(client,route)},function(err){return err.data&&"Please Login"===err.data.error?(loader.setLoaded(),AlertService.raise("EMAIL_IN_USE")):err.data&&"Sorry, it appears that this phone number already exists"===err.data.error?(loader.setLoaded(),AlertService.raise("PHONE_NUMBER_IN_USE")):loader.setLoadedAndShowError($scope,err,"Sorry, something went wrong")})},$scope.getClients=function(params,options){if(null==options&&(options={}),$scope.search_triggered=!0,$timeout(function(){return $scope.search_triggered=!1},1e3),params&&(!params||params.filter_by))return $scope.params={company:params.company||$scope.bb.company,per_page:params.per_page||$scope.clients.request_page_size,filter_by:params.filter_by,search_by_fields:params.search_by_fields||"phone,mobile",order_by:params.order_by||$scope.sort_by,order_by_reverse:params.order_by_reverse,page:params.page||1},AdminBookingOptions.use_default_company_id&&($scope.params.default_company_id=$scope.bb.company.id),$scope.notLoaded($scope),BBModel.Admin.Client.$query($scope.params).then(function(result){return $scope.search_complete=!0,options.add?$scope.clients.add(params.page,result.items):$scope.clients.initialise(result.items,result.total_entries),loader.setLoaded()})},$scope.searchClients=function(search_text){var defer=$q.defer(),params={filter_by:search_text,company:$scope.bb.company};return AdminBookingOptions.use_default_company_id&&(params.default_company_id=$scope.bb.company.id),BBModel.Admin.Client.$query(params).then(function(clients){return defer.resolve(clients.items)}),defer.promise},$scope.typeHeadResults=function($item,$model,$label){var item=$item;return $scope.client=item,$scope.selectClient($item)},$scope.clearSearch=function(){return $scope.clients.initialise(),$scope.typeahead_result=null,$scope.search_complete=!1},$scope.edit=function(item){return $log.info("not implemented")},$scope.pageChanged=function(){var _Array$from=Array.from($scope.clients.update()),_Array$from2=_slicedToArray(_Array$from,2),items_present=_Array$from2[0],page_to_load=_Array$from2[1];if(!items_present)return $scope.params.page=page_to_load,$scope.getClients($scope.params,{add:!0})},$scope.sortChanged=function(sort_by){return $scope.params.order_by=sort_by,$scope.params.page=1,$scope.getClients($scope.params)}}angular.module("BBAdminBooking").directive("bbAdminBookingClients",function(){return{restrict:"AE",replace:!1,scope:!0,controller:AdminBookingClientsCtrl,templateUrl:"admin_booking_clients.html"}})}(),angular.module("BBAdminBooking").directive("bbAdminBooking",function(BBModel,$log,$compile,$q,PathSvc,$templateCache,$http){var getTemplate=function(template){var partial=template||"main";return $templateCache.get(partial+".html")},renderTemplate=function(scope,element,design_mode,template){return $q.when(getTemplate(template)).then(function(template){return element.html(template).show(),design_mode&&element.append("<style widget_css scoped></style>"),$compile(element.contents())(scope)})};return{link:function(scope,element,attrs){var config=scope.$eval(attrs.bbAdminBooking);if(config||(config={}),config.admin=!0,attrs.companyId||(config.company_id?attrs.companyId=config.company_id:scope.company&&(attrs.companyId=scope.company.id)),attrs.companyId)return BBModel.Admin.Company.$query(attrs).then(function(company){return scope.company=company,scope.initWidget(config),renderTemplate(scope,element,config.design_mode,config.template)})},controller:"BBCtrl",controllerAs:"$bbCtrl",scope:!0}}),angular.module("BBAdminBooking").directive("bbAdminBookingPopup",function(AdminBookingPopup){return{restrict:"A",link:function(scope,element,attrs){return element.bind("click",function(){return scope.open()})},controller:function($scope){return $scope.open=function(){return AdminBookingPopup.open()}}}}),angular.module("BBAdminBooking").directive("bbAdminMemberBookingsTable",function($uibModal,$log,$rootScope,$compile,$templateCache,ModalForm,BBModel,Dialog,AdminMoveBookingPopup){return{controller:function($document,$scope,$uibModal){$scope.loading=!0,$scope.fields||($scope.fields=["date_order","details"]),$scope.$watch("member",function(member){if(null!=member)return getBookings($scope,member)}),$scope.edit=function(id){var booking=_.find($scope.booking_models,function(b){return b.id===id});return booking.$getAnswers().then(function(answers){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from(answers.answers)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var answer=_step.value;booking["question"+answer.question_id]=answer.value}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}return ModalForm.edit({model:booking,title:"Booking Details",templateUrl:"edit_booking_modal_form.html",success:function(response){if("string"!=typeof response)return updateBooking(booking);if("move"===response){var item_defaults={person:booking.person_id,resource:booking.resource_id};return AdminMoveBookingPopup.open({item_defaults:item_defaults,company_id:booking.company_id,booking_id:booking.id,success:function(model){return updateBooking(booking)},fail:function(model){return updateBooking(booking)}})}}})})};var updateBooking=function(b){return b.$refetch().then(function(b){b=new BBModel.Admin.Booking(b);var i=_.indexOf($scope.booking_models,function(b){return b.id===id});return $scope.booking_models[i]=b,$scope.setRows()})};$scope.cancel=function(id){var _booking=_.find($scope.booking_models,function(b){return b.id===id});return $uibModal.open({templateUrl:"member_bookings_table_cancel_booking.html",controller:function($scope,$uibModalInstance,booking){return $scope.booking=booking,$scope.booking.notify=!0,$scope.ok=function(){return $uibModalInstance.close($scope.booking)},$scope.close=function(){return $uibModalInstance.dismiss()}},scope:$scope,resolve:{booking:function(){return _booking}}}).result.then(function(booking){$scope.loading=!0;var params={notify:booking.notify};return booking.$post("cancel",params).then(function(){var i=_.findIndex($scope.booking_models,function(b){return console.log(b),b.id===booking.id});return $scope.booking_models.splice(i,1),$scope.setRows(),$scope.loading=!1})})},$scope.setRows=function(){return $scope.bookings=_.map($scope.booking_models,function(booking){return{id:booking.id,date:moment(booking.datetime).format("YYYY-MM-DD"),date_order:moment(booking.datetime).format("x"),datetime:moment(booking.datetime),details:booking.full_describe}})};var getBookings=function($scope,member){var params={start_date:$scope.startDate.format("YYYY-MM-DD"),start_time:$scope.startTime?$scope.startTime.format("HH:mm"):void 0,end_date:$scope.endDate?$scope.endDate.format("YYYY-MM-DD"):void 0,end_time:$scope.endTime?$scope.endTime.format("HH:mm"):void 0,company:$rootScope.bb.company,url:$rootScope.bb.api_url,client_id:member.id,skip_cache:!0};return BBModel.Admin.Booking.$query(params).then(function(bookings){var now=moment().unix();return $scope.period&&"past"===$scope.period?$scope.booking_models=_.filter(bookings.items,function(x){return x.datetime.unix()<now}):$scope.period&&"future"===$scope.period?$scope.booking_models=_.filter(bookings.items,function(x){return x.datetime.unix()>now}):$scope.booking_models=bookings.items,$scope.setRows(),$scope.loading=!1},function(err){return $log.error(err.data),$scope.loading=!1})};if($scope.startDate||($scope.startDate=moment()),$scope.orderBy=$scope.defaultOrder,null==$scope.orderBy&&($scope.orderBy="date_order"),$scope.now=moment(),$scope.member)return getBookings($scope,$scope.member)},templateUrl:"admin_member_bookings_table.html",scope:{apiUrl:"@",fields:"=?",member:"=",startDate:"=?",startTime:"=?",endDate:"=?",endTime:"=?",defaultOrder:"=?",period:"@"}}}),angular.module("BBAdminBooking").directive("bbAdminMoveBooking",function($log,$compile,$q,PathSvc,$templateCache,$http,BBModel,$rootScope){var getTemplate=function(template){var partial=template||"main";return $templateCache.get(partial+".html")},renderTemplate=function(scope,element,design_mode,template){return $q.when(getTemplate(template)).then(function(template){return element.html(template).show(),design_mode&&element.append("<style widget_css scoped></style>"),$compile(element.contents())(scope),scope.decideNextPage("calendar")})};return{link:function(scope,element,attrs){var config=scope.$eval(attrs.bbAdminMoveBooking);if(config||(config={}),config.no_route=!0,config.admin=!0,config.template||(config.template="main"),attrs.companyId||(config.company_id?attrs.companyId=config.company_id:scope.company&&(attrs.companyId=scope.company.id)),attrs.companyId)return BBModel.Admin.Company.$query(attrs).then(function(company){return scope.initWidget(config),company.getBooking(config.booking_id).then(function(booking){scope.company=company,scope.bb.moving_booking=booking,scope.quickEmptybasket();var proms=[],new_item=new BBModel.BasketItem(booking,scope.bb);if(new_item.setSrcBooking(booking,scope.bb),new_item.clearDateTime(),new_item.ready=!1,booking.$has("client")){var client_prom=booking.$get("client");proms.push(client_prom),client_prom.then(function(client){return scope.setClient(new BBModel.Client(client))})}return Array.prototype.push.apply(proms,new_item.promises),scope.bb.basket.addItem(new_item),scope.setBasketItem(new_item),$q.all(proms).then(function(){return $rootScope.$broadcast("booking:move"),scope.setLoaded(scope),renderTemplate(scope,element,config.design_mode,config.template)},function(err){return scope.setLoaded(scope),failMsg()})})})},controller:"BBCtrl",controllerAs:"$bbCtrl"}}),angular.module("BBAdminBooking").factory("AdminMoveBookingPopup",function($uibModal,$timeout,$document){return{open:function(_config){return $uibModal.open({size:"lg",controller:function($scope,$uibModalInstance,config,$window,AdminBookingOptions){return $scope.Math=$window.Math,$scope.bb&&$scope.bb.current_item&&delete $scope.bb.current_item,$scope.config=angular.extend({clear_member:!0,template:"main"},config),$scope.company&&($scope.config.company_id||($scope.config.company_id=$scope.company.id)),$scope.config.item_defaults=angular.extend({merge_resources:AdminBookingOptions.merge_resources,merge_people:AdminBookingOptions.merge_people},config.item_defaults),$scope.cancel=function(){return $uibModalInstance.dismiss("cancel")}},templateUrl:"admin_move_booking_popup.html",resolve:{config:function(){return _config}}}).result.then(function(result){return _config.success&&_config.success(),result},function(err){return _config.fail&&_config.fail(),err})}}});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},BBBlockTimeCtrl=function($scope,$element,$attrs,BBModel,BookingCollections,$rootScope,BBAssets){"ngInject";$scope.resources=[],$scope.resourceError=!1,BBAssets.getAssets($scope.bb.company).then(function(assets){return $scope.resources=assets}),moment.isMoment($scope.bb.to_datetime)||($scope.bb.to_datetime=moment($scope.bb.to_datetime)),moment.isMoment($scope.bb.from_datetime)||($scope.bb.from_datetime=moment($scope.bb.from_datetime)),moment.isMoment($scope.bb.to_datetime)||($scope.bb.to_datetime=moment($scope.bb.to_datetime)),$scope.bb.min_date&&!moment.isMoment($scope.bb.min_date)&&($scope.bb.min_date=moment($scope.bb.min_date)),$scope.bb.max_date&&!moment.isMoment($scope.bb.max_date)&&($scope.bb.max_date=moment($scope.bb.max_date)),$scope.all_day=!1,$scope.hideBlockAllDay=Math.abs($scope.bb.from_datetime.diff($scope.bb.to_datetime,"days"))>0,$scope.bb.company_settings&&$scope.bb.company_settings.$has("block_questions")&&$scope.bb.company_settings.$get("block_questions",{}).then(function(details){return $scope.block_questions=new BBModel.ItemDetails(details)}),$scope.blockTime=function(form){if(null==form)return console.error("blockTime requires form as first argument"),!1;if(form.$setSubmitted(),form.$invalid||!isValid())return!1;$scope.loading=!0;var params={start_time:$scope.bb.from_datetime,end_time:$scope.bb.to_datetime,booking:!0,allday:$scope.all_day};return $scope.block_questions&&(params.questions=$scope.block_questions.getPostData()),"object"===_typeof($scope.bb.current_item.person)?BBModel.Admin.Person.$block($scope.bb.company,$scope.bb.current_item.person,params).then(function(response){return blockSuccess(response)}):"object"===_typeof($scope.bb.current_item.resource)?BBModel.Admin.Resource.$block($scope.bb.company,$scope.bb.current_item.resource,params).then(function(response){return blockSuccess(response)}):void 0};var isValid=function(){return $scope.resourceError=!1,"object"!==_typeof($scope.bb.current_item.person)&&"object"!==_typeof($scope.bb.current_item.resource)&&($scope.resourceError=!0),!("object"!==_typeof($scope.bb.current_item.person)&&"object"!==_typeof($scope.bb.current_item.resource)||null==$scope.bb.from_datetime||!$scope.bb.to_datetime)},blockSuccess=function(response){return $rootScope.$broadcast("refetchBookings"),$scope.loading=!1,$scope.cancel()};$scope.changeBlockDay=function(blockDay){return $scope.all_day=blockDay}};angular.module("BBAdminBooking").directive("bbBlockTime",function(){return{scope:!0,restrict:"A",controller:BBBlockTimeCtrl}}),angular.module("BB.Directives").directive("selectFirstSlot",function(){return{link:function(scope,el,attrs){return scope.$on("slotsUpdated",function(e,basket_item,slots){if(slots=_.filter(slots,function(slot){return slot.datetime.isAfter(moment())}),slots[0]){scope.bb.selected_slot=slots[0],scope.bb.selected_date=scope.selected_date;var hours=slots[0].datetime.hours(),minutes=slots[0].datetime.minutes();scope.bb.selected_date.hour(hours).minutes(minutes).seconds(0),scope.highlightSlot(slots[0],scope.selected_day)}return function(){var result=[],_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from(slots)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var slot=_step.value;slot.selected||result.push(slot.hidden=!0)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}return result}()})}}}),angular.module("BB.Filters").filter("in_the_future",function(){return function(slots){var tim=moment(),now_tod=tim.minutes()+60*tim.hours();return _.filter(slots,function(x){return x.time>now_tod})}}),angular.module("BB.Filters").filter("tod_from_now",function(){return function(tod,options){var str=void 0,tim=moment(),now_tod=tim.minutes()+60*tim.hours(),v=tod-now_tod,hour_string=options&&options.abbr_units?"hr":"hour",min_string=options&&options.abbr_units?"min":"minute",seperator=options&&angular.isString(options.seperator)?options.seperator:"and",val=parseInt(v);if(val<60)return val+" "+min_string+"s";var hours=parseInt(val/60),mins=val%60;return 0===mins?1===hours?"1 "+hour_string:hours+" "+hour_string+"s":(str=hours+" "+hour_string,hours>1&&(str+="s"),0===mins?str:(seperator.length>0&&(str+=" "+seperator),str+=" "+mins+" "+min_string+"s"))}}),angular.module("BB.Services").provider("AdminBookingOptions",function(){var options={merge_resources:!0,merge_people:!0,day_view:"multi_day",mobile_pattern:null,use_default_company_id:!1};this.setOption=function(option,value){options.hasOwnProperty(option)&&(options[option]=value)},this.$get=function(){return options}}),function(){function adminBookingPopup($uibModal){function AdminBookingPopupCtrl($rootScope,$scope,$uibModalInstance,config,$window,AdminBookingOptions){"ngInject";var updateModalTitle=function(event,date){return $scope.config.title=date.datetime.format("LLLL")},updateModalTitleHandler=$scope.$on("slotChanged:updateModalTitle",updateModalTitle);$scope.$on("$destroy",function(){return updateModalTitleHandler()}),$scope.Math=$window.Math,$scope.bb&&$scope.bb.current_item&&delete $scope.bb.current_item,$scope.config=angular.extend({clear_member:!0,template:"main"},config),$scope.company&&($scope.config.company_id||($scope.config.company_id=$scope.company.id)),$scope.config.item_defaults=angular.extend({merge_resources:AdminBookingOptions.merge_resources,merge_people:AdminBookingOptions.merge_people},config.item_defaults),$scope.cancel=function(){return $uibModalInstance.dismiss("cancel")}}return{open:function(_config){return $uibModal.open({size:"lg",controller:AdminBookingPopupCtrl,templateUrl:"admin_booking_popup.html",resolve:{config:function(){return _config}}})}}}angular.module("BBAdminBooking").factory("AdminBookingPopup",adminBookingPopup)}();var BBAssets=function(BBModel,$q,$translate){"ngInject";return{getAssets:function(company){var delay=$q.defer(),promises=[],assets=[];return company.$has("people")&&promises.push(BBModel.Admin.Person.$query({company:company,embed:"immediate_schedule"}).then(function(people){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from(people)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var p=_step.value;p.title=p.name,null==p.identifier&&(p.identifier=p.id+"_p"),p.group=$translate.instant("ADMIN_BOOKING.ASSETS.STAFF_GROUP_LABEL")}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}return assets=_.union(assets,people)})),company.$has("resources")&&promises.push(BBModel.Admin.Resource.$query({company:company,embed:"immediate_schedule"}).then(function(resources){var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=Array.from(resources)[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var r=_step2.value;r.title=r.name,null==r.identifier&&(r.identifier=r.id+"_r"),r.group=$translate.instant("ADMIN_BOOKING.ASSETS.RESOURCES_GROUP_LABEL")}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}return assets=_.union(assets,resources)})),$q.all(promises).then(function(){return assets.sort(function(a,b){return"person"===a.type&&"resource"===b.type?-1:"resource"===a.type&&"person"===b.type?1:a.name>b.name?1:a.name<b.name?-1:0}),delay.resolve(assets)}),delay.promise}}};angular.module("BBAdminBooking").factory("BBAssets",BBAssets),angular.module("BBAdminBooking").factory("ProcessAssetsFilter",function(){return function(string){var assets=[]
;return void 0===string||""===string?assets:angular.forEach(string.split(","),function(value){return assets.push(parseInt(decodeURIComponent(value)))})}}),angular.module("BBAdminBooking").config(function($translateProvider){"ngInject";var translations={ADMIN_BOOKING:{ASSETS:{RESOURCES_GROUP_LABEL:"@:COMMON.TERMINOLOGY.RESOURCES",STAFF_GROUP_LABEL:"@:COMMON.TERMINOLOGY.STAFF"},CALENDAR:{STEP_HEADING:"Select a time",TIME_NOT_AVAILABLE_STEP_HEADING:"Time not available",ANY_PERSON_OPTION:"Any person",ANY_RESOURCE_OPTION:"Any resource",BACK_BTN:"@:COMMON.BTN.BACK",SELECT_BTN:"@:COMMON.BTN.SELECT",CALENDAR_PANEL_HEADING:"@:COMMON.TERMINOLOGY.CALENDAR",NOT_AVAILABLE:"Time not available: {{time | datetime: 'lll':true}}",CONFLICT_EXISTS:"There's an availability conflict",CONFLICT_EXISTS_WITH_PERSON:"with {{person_name}}",CONFLICT_EXISTS_IN_RESOURCE:"in {{resource_name}}",CONFLICT_RESULT_OF:"This can be the result of:",CONFLICT_REASON_ALREADY_BOOKED:"The Staff/Resource being booked or blocked already",CONFLICT_REASON_NOT_ENOUGH_TIME:"Not enough available time to complete the booking before an existing one starts",CONFLICT_REASON_OUTSIDE:"The selected time being outside of the {{booking_time_step | time_period}} booking time step for {{service_name}}.",CONFLICT_ANOTHER_TIME_OR_OVERBOOK:"You can either use the calendar to choose another time or overbook.",DAY_VIEW_BTN:"Day",DAY_3_VIEW_BTN:"3 day",DAY_5_VIEW_BTN:"5 day",DAY_7_VIEW_BTN:"7 day",FIRST_FOUND_VIEW_BTN:"First available",TIME_SLOT_WITH_COUNTDOWN:"{{datetime | datetime: 'LT':true}} (in {{time | tod_from_now}})",NOT_FOUND:"No availability found",NOT_FOUND_TRY_DIFFERENT_TIME_RANGE:"No availability found, try a different time-range",OVERBOOK_WARNING:"Overbooking ignores booking time step and availability constraints to make a booking.",FILTER_BY_LBL:"Filter by",PREV_DAY_BTN:"Previous Day",NEXT_DAY_BTN:"Next Day",SELECT_A_TIME_FOR_BOOKING:"Select a time for the booking.",OVERLAPPING_BOOKINGS:"The following bookings look like they are clashing with this requested time",NEARBY_BOOKINGS:"The following nearby bookings might be clashing with this requested time",EXTERNAL_BOOKINGS:"The following external calendar bookings look like they are clashing with this requested time",EXTERNAL_BOOKING_DESCRIPTION:"{{title}} from {{from | datetime: 'lll':true}} to {{to | datetime: 'lll':true}}",ALTERNATIVE_TIME_NO_OVERBOOKING:"It looks like the booking step that service was configured for doesn't allow that time. You can select an alternative time, or you can try booking the requested time anyway, however making double bookings is not allowed by your business configuration settings",ALTERNATIVE_TIME_ALLOW_OVERBOOKING:"The following external calendar bookings look like they are clashing with this requested time",CLOSEST_TIME_NO_OVERBOOKING:"Looks like that time wasn't available. This could just be because it would be outside of their normal schedule. This was the closest time I found. You can select an alternative time, or you can try booking the requested time anyway, however double bookings aren't allowed by your company configuration settings",CLOSEST_TIME_ALLOW_OVERBOOKING:"Looks like that time wasn't available. This could just be because it would be outside of their normal schedule. This was the closest time I found. You can select an alternative time, or you can try booking the requested time anyway",CLOSEST_EARLIER_TIME_BTN:"Closest Earlier: {{closest_earlier | datetime: 'LT':true}}",CLOSEST_LATER_TIME_BTN:"Closest Later: {{closest_later | datetime: 'LT':true}}",REQUESTED_TIME_BTN:"Requested Time: {{requested_time | datetime: 'LT':true}}",FIND_ANOTHER_TIME_BTN:"Find another time",MORNING_HEADER:"@:COMMON.TERMINOLOGY.MORNING",AFTERNOON_HEADER:"@:COMMON.TERMINOLOGY.AFTERNOON",EVENING_HEADER:"@:COMMON.TERMINOLOGY.EVENING"},CUSTOMER:{CUSTOMER:"Customer",BACK_BTN:"@:COMMON.BTN.BACK",SEARCH_BTN:"Search for customer",CLEAR_BTN:"@:COMMON.BTN.CLEAR",CREATE_HEADING:"Create Customer",CREATE_BTN:"Create Customer",CREATE_ONE_INSTEAD_BTN:"Create one instead",EMAIL_LBL:"@:COMMON.TERMINOLOGY.EMAIL",FIRST_NAME_LBL:"@:COMMON.TERMINOLOGY.FIRST_NAME",LAST_NAME_LBL:"@:COMMON.TERMINOLOGY.LAST_NAME",MOBILE_LBL:"@:COMMON.TERMINOLOGY.MOBILE",NO_RESULTS_FOUND:"No results found",NUM_CUSTOMERS:"{CUSTOMERS_NUMBER, plural, =0{no customers} =1{one customer} other{{CUSTOMERS_NUMBER} customers}} found",SEARCH_BY_PLACEHOLDER:"Search by email or name",STEP_HEADING:"Select a customer",SELECT_BTN:"@:COMMON.BTN.SELECT",SORT_BY_LBL:"Sort by",SORT_BY_EMAIL:"@:COMMON.TERMINOLOGY.EMAIL",SORT_BY_FIRST_NAME:"@:COMMON.TERMINOLOGY.FIRST_NAME",SORT_BY_LAST_NAME:"@:COMMON.TERMINOLOGY.LAST_NAME",ADDRESS1_LBL:"@:COMMON.TERMINOLOGY.ADDRESS1",ADDRESS1_VALIDATION_MSG:"Please enter an address",ADDRESS3_LBL:"@:COMMON.TERMINOLOGY.ADDRESS3",ADDRESS4_LBL:"@:COMMON.TERMINOLOGY.ADDRESS4",POSTCODE_LBL:"@:COMMON.TERMINOLOGY.POSTCODE"},QUICK_PICK:{BLOCK_WHOLE_DAY:"Block whole day",BLOCK_TIME_TAB_HEADING:"Block time",MAKE_BOOKING_TAB_HEADING:"Make booking",FOR:"For",PERSON_LABEL:"@:COMMON.TERMINOLOGY.PERSON",PERSON_DEFAULT_OPTION:"Any Person",RESOURCE_LABEL:"@:COMMON.TERMINOLOGY.RESOURCE",RESOURCE_DEFAULT_OPTION:"Any Resource",FROM_LBL:"From",SERVICE_LABEL:"Select a service",SERVICE_DEFAULT_OPTION:"-- select --",SERVICE_REQUIRED_MSG:"Please select a service",TO_LBL:"To",YES_OPTION:"@:COMMON.BTN.YES",NO_OPTION:"@:COMMON.BTN.NO",NEXT_BTN:"@:COMMON.BTN.NEXT",BLOCK_TIME_BTN:"Block Time",FIELD_REQUIRED:"@:COMMON.FORM.FIELD_REQUIRED"},BOOKINGS_TABLE:{CANCEL_BTN:"@:COMMON.BTN.CANCEL",DETAILS_BTN:"@:COMMON.BTN.DETAILS",DATE_HEADING:"Date/Time",DETAILS_HEADING:"Description",ACTION_HEADING:"Actions"},ADMIN_MOVE_BOOKING:{CANCEL_CONFIRMATION_HEADING:"Your booking has been cancelled.",HEADING:"Your {{service_name}} booking",CUSTOMER_NAME_LBL:"@:COMMON.TERMINOLOGY.NAME",PRINT_BTN:"@:COMMON.TERMINOLOGY.PRINT",EMAIL_LBL:"@:COMMON.TERMINOLOGY.EMAIL",SERVICE_LBL:"@:COMMON.TERMINOLOGY.SERVICE",WHEN_LBL:"@:COMMON.TERMINOLOGY.WHEN",PRICE_LBL:"@:COMMON.TERMINOLOGY.PRICE",CANCEL_BOOKING_BTN:"@:COMMON.BTN.CANCEL_BOOKING",MOVE_BOOKING_BTN:"Move booking",BOOK_WAITLIST_ITEMS_BTN:"Book Waitlist Items"},CHECK_ITEMS:{BOOKINGS_QUESTIONS_HEADING:"Booking Questions",PRIVATE_BOOKING_NOTES_HEADING:"Private Notes",BOOK_BTN:"@:COMMON.BTN.BOOK",BACK_BTN:"@:COMMON.BTN.BACK"},CONFIRMATION:{TITLE:"@:COMMON.TERMINOLOGY.CONFIRMATION",BOOKING_CONFIRMATION:"Booking is now confirmed.",EMAIL_CONFIRMATION:"An email has been sent to {{customer_name}} with the details below.",WAITLIST_CONFIRMATION:"You have successfully made the following bookings.",PRINT_BTN:"@:COMMON.TERMINOLOGY.PRINT",PURCHASE_REF_LBL:"Reference",CUSTOMER_LBL:"@:COMMON.TERMINOLOGY.BOOKING_REF",SERVICE_LBL:"@:COMMON.TERMINOLOGY.SERVICE",DATE_TIME_LBL:"@:COMMON.TERMINOLOGY.DATE_TIME",TIME_LBL:"@:COMMON.TERMINOLOGY.TIME",PRICE_LBL:"@:COMMON.TERMINOLOGY.PRICE",CLOSE_BTN:"@:COMMON.BTN.CLOSE"},MODAL:{CLOSE_BTN:"@:COMMON.BTN.CLOSE"}}};$translateProvider.translations("en",translations)});