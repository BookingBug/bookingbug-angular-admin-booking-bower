(function(){"use strict";var adminbookingapp;adminbookingapp=angular.module("BBAdminBooking",["BB","BBAdmin.Services","BBAdminServices","trNgGrid"]),angular.module("BBAdminBooking").config(function($logProvider){return $logProvider.debugEnabled(!0)}),angular.module("BBAdminBooking.Directives",[]),angular.module("BBAdminBooking.Services",["ngResource","ngSanitize"]),angular.module("BBAdminBooking.Controllers",["ngLocalData","ngSanitize"]),adminbookingapp.run(function($rootScope,$log,DebugUtilsService,$bbug,$document,$sessionStorage,FormDataStoreService,AppConfig,BBModel){return BBModel.Admin.Login.$checkLogin().then(function(){if($rootScope.user&&$rootScope.user.company_id)return $rootScope.bb||($rootScope.bb={}),$rootScope.bb.company_id=$rootScope.user.company_id})})}).call(this),function(){var extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;window.Collection.Client=function(superClass){function Client(){return Client.__super__.constructor.apply(this,arguments)}return extend(Client,superClass),Client.prototype.checkItem=function(item){return Client.__super__.checkItem.apply(this,arguments)},Client}(window.Collection.Base),angular.module("BB.Services").provider("ClientCollections",function(){return{$get:function(){return new window.BaseCollections}}})}.call(this),function(){"use strict";angular.module("BB.Directives").directive("bbAdminCalendar",function(){return{restrict:"AE",replace:!0,scope:!0,controller:"adminCalendarCtrl"}}),angular.module("BB.Controllers").controller("adminCalendarCtrl",function($scope,$element,$controller,$attrs,BBModel,$rootScope){return angular.extend(this,$controller("TimeList",{$scope:$scope,$attrs:$attrs,$element:$element})),$scope.calendar_view={next_available:!1,day:!1,multi_day:!1},$rootScope.connection_started.then(function(){return $scope.initialise()}),$scope.initialise=function(){if($scope.bb.item_defaults.pick_first_time?$scope.switchView("next_available"):null!=$scope.bb.current_item.defaults.time?$scope.switchView("day"):$scope.switchView($scope.bb.item_defaults.day_view||"multi_day"),$scope.bb.current_item.person&&($scope.person_name=$scope.bb.current_item.person.name),$scope.bb.current_item.resource)return $scope.resource_name=$scope.bb.current_item.resource.name},$scope.switchView=function(view){var i,key,len,ref,ref1,slot,value;if("day"===view&&$scope.slots&&$scope.bb.current_item.time)for(ref=$scope.slots,i=0,len=ref.length;i<len;i++)if(slot=ref[i],slot.time===$scope.bb.current_item.time.time){$scope.highlightSlot(slot,$scope.bb.current_item.date);break}ref1=$scope.calendar_view;for(key in ref1)value=ref1[key],$scope.calendar_view[key]=!1;return $scope.calendar_view[view]=!0},$scope.pickTime=function(slot){return $scope.bb.current_item.setTime(slot),$scope.bb.current_item.reserve_ready?$scope.addItemToBasket().then(function(_this){return function(){return $scope.decideNextPage()}}(this)):$scope.decideNextPage()},$scope.pickOtherTime=function(){return $scope.availability_conflict=!1},$scope.setCloseBookings=function(bookings){return $scope.other_bookings=bookings},$scope.overBook=function(){var new_day,new_timeslot;return new_timeslot=new BBModel.TimeSlot({time:$scope.bb.current_item.defaults.time,avail:1}),new_day=new BBModel.Day({date:$scope.bb.current_item.defaults.datetime,spaces:1}),$scope.setLastSelectedDate(new_day.date),$scope.bb.current_item.setDate(new_day),$scope.bb.current_item.setTime(new_timeslot),$scope.bb.current_item.setPerson($scope.bb.current_item.defaults.person),$scope.bb.current_item.setResource($scope.bb.current_item.defaults.resource),$scope.bb.current_item.reserve_ready?$scope.addItemToBasket().then(function(_this){return function(){return $scope.decideNextPage()}}(this)):$scope.decideNextPage()}}),angular.module("BB.Directives").directive("bbAdminCalendarConflict",function(){return{restrict:"AE",replace:!0,scope:!0,controller:function($scope,$element,$controller,$attrs,BBModel,$rootScope){var duration,en,end_time,i,ibest_earlier,ibest_later,len,max_time,min_time,params,ref,service,slot,st,start_datetime,time;if(time=$scope.bb.current_item.defaults.time,duration=$scope.bb.current_item.duration,end_time=time+$scope.bb.current_item.duration,start_datetime=$scope.bb.current_item.defaults.datetime,service=$scope.bb.current_item.service,min_time=start_datetime.clone().add(-(service.pre_time||0),"minutes"),max_time=start_datetime.clone().add(duration+(service.post_time||0),"minutes"),st=time-30,en=time+duration+30,ibest_earlier=0,ibest_later=0,$scope.allow_overbook=$scope.bb.company.settings.has_overbook,$scope.slots)for(ref=$scope.slots,i=0,len=ref.length;i<len;i++)slot=ref[i],time>slot.time&&(ibest_earlier=slot.time,$scope.best_earlier=slot),0===ibest_later&&slot.time>time&&(ibest_later=slot.time,$scope.best_later=slot);return ibest_earlier>0&&ibest_later>0&&ibest_earlier>time-duration&&ibest_later<time+duration&&($scope.step_mismatch=!0),$scope.checking_conflicts=!0,params={src:$scope.bb.company,person_id:$scope.bb.current_item.defaults.person?$scope.bb.current_item.defaults.person.id:void 0,resource_id:$scope.bb.current_item.defaults.resource?$scope.bb.current_item.defaults.resource_id:void 0,start_date:$scope.bb.current_item.defaults.datetime.format("YYYY-MM-DD"),start_time:sprintf("%02d:%02d",st/60,st%60),end_time:sprintf("%02d:%02d",en/60,en%60)},BBModel.Admin.Booking.$query(params).then(function(bookings){return bookings.items.length>0&&($scope.nearby_bookings=_.filter(bookings.items,function(x){return $scope.bb.current_item.defaults.person&&x.person_id===$scope.bb.current_item.defaults.person.id||$scope.bb.current_item.defaults.resources&&x.resources_id===$scope.bb.current_item.defaults.resources.id}),$scope.overlapping_bookings=_.filter($scope.nearby_bookings,function(x){var b_en,b_st;return b_st=moment(x.datetime).subtract(-(x.pre_time||0),"minutes"),b_en=moment(x.end_datetime).subtract(x.post_time||0,"minutes"),b_st.isBefore(max_time)&&b_en.isAfter(min_time)}),0===$scope.nearby_bookings.length&&($scope.nearby_bookings=!1),0===$scope.overlapping_bookings.length&&($scope.overlapping_bookings=!1)),!$scope.overlapping_bookings&&$scope.bb.company.$has("external_bookings")&&(params={start:$scope.bb.current_item.defaults.datetime.format("YYYY-MM-DD"),end:$scope.bb.current_item.defaults.datetime.clone().add(1,"day").format("YYYY-MM-DD"),person_id:$scope.bb.current_item.defaults.person?$scope.bb.current_item.defaults.person.id:void 0,resource_id:$scope.bb.current_item.defaults.resource?$scope.bb.current_item.defaults.resource_id:void 0},$scope.bb.company.$get("external_bookings",params).then(function(collection){if(bookings=collection.external_bookings,bookings&&bookings.length>0)return $scope.external_bookings=_.filter(bookings,function(x){return x.start_time=moment(x.start),x.end_time=moment(x.end),x.title||(x.title="Blocked"),x.start_time.isBefore(max_time)&&x.end_time.isAfter(min_time)})})),$scope.checking_conflicts=!1},function(err){return $scope.checking_conflicts=!1})}}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").directive("bbAdminBookingClients",function(){return{restrict:"AE",replace:!1,scope:!0,controller:"adminBookingClients",templateUrl:"admin_booking_clients.html"}}),angular.module("BBAdminBooking").controller("adminBookingClients",function($scope,$rootScope,$q,AlertService,ValidatorService,ErrorService,$log,BBModel,$timeout,LoadingService,AdminBookingOptions,$translate){var loader;return $scope.validator=ValidatorService,$scope.admin_options=AdminBookingOptions,$scope.clients=new BBModel.Pagination({page_size:10,max_size:5,request_page_size:10}),loader=LoadingService.$loader($scope),$scope.sort_by_options=[{key:"first_name",name:$translate.instant("ADMIN_BOOKING.CUSTOMER.SORT_BY_FIRST_NAME")},{key:"last_name",name:$translate.instant("ADMIN_BOOKING.CUSTOMER.SORT_BY_LAST_NAME")},{key:"email",name:$translate.instant("ADMIN_BOOKING.CUSTOMER.SORT_BY_EMAIL")}],$scope.sort_by=$scope.sort_by_options[0].key,$rootScope.connection_started.then(function(){return $scope.clearClient()}),$scope.selectClient=function(_this){return function(client,route){return $scope.setClient(client),$scope.client.setValid(!0),$scope.decideNextPage(route)}}(this),$scope.createClient=function(_this){return function(route){return loader.notLoaded(),$scope.bb&&$scope.bb.parent_client&&($scope.client.parent_client_id=$scope.bb.parent_client.id),$scope.client_details&&$scope.client.setClientDetails($scope.client_details),BBModel.Client.$create_or_update($scope.bb.company,$scope.client).then(function(client){return loader.setLoaded(),$scope.selectClient(client,route)},function(err){return err.data&&"Please Login"===err.data.error?(loader.setLoaded(),AlertService.raise("EMAIL_ALREADY_REGISTERED_ADMIN")):err.data&&"Sorry, it appears that this phone number already exists"===err.data.error?(loader.setLoaded(),AlertService.raise("PHONE_NUMBER_ALREADY_REGISTERED_ADMIN")):loader.setLoadedAndShowError($scope,err,"Sorry, something went wrong")})}}(this),$scope.getClients=function(params,options){if(null==options&&(options={}),$scope.search_triggered=!0,$timeout(function(){return $scope.search_triggered=!1},1e3),params&&(!params||params.filter_by))return $scope.params={company:params.company||$scope.bb.company,per_page:params.per_page||$scope.clients.request_page_size,filter_by:params.filter_by,search_by_fields:params.search_by_fields||"phone,mobile",order_by:params.order_by||$scope.sort_by,order_by_reverse:params.order_by_reverse,page:params.page||1},$scope.notLoaded($scope),BBModel.Admin.Client.$query($scope.params).then(function(result){return $scope.search_complete=!0,options.add?$scope.clients.add(params.page,result.items):$scope.clients.initialise(result.items,result.total_entries),loader.setLoaded()})},$scope.searchClients=function(search_text){var defer,params;return defer=$q.defer(),params={filter_by:search_text,company:$scope.bb.company},BBModel.Admin.Client.$query(params).then(function(_this){return function(clients){return defer.resolve(clients.items)}}(this)),defer.promise},$scope.typeHeadResults=function($item,$model,$label){var item,label,model;return item=$item,model=$model,label=$label,$scope.client=item,$scope.selectClient($item)},$scope.clearSearch=function(){return $scope.clients.initialise(),$scope.typehead_result=null,$scope.search_complete=!1},$scope.edit=function(item){return $log.info("not implemented")},$scope.pageChanged=function(){var items_present,page_to_load,ref;if(ref=$scope.clients.update(),items_present=ref[0],page_to_load=ref[1],!items_present)return $scope.params.page=page_to_load,$scope.getClients($scope.params,{add:!0})},$scope.sortChanged=function(sort_by){return $scope.params.order_by=sort_by,$scope.params.page=1,$scope.getClients($scope.params)}})}.call(this),function(){angular.module("BBAdminBooking").directive("bbAdminBooking",function(BBModel,$log,$compile,$q,PathSvc,$templateCache,$http){var getTemplate,link,renderTemplate;return getTemplate=function(template){var fromTemplateCache,partial,src;return partial=template?template:"main",fromTemplateCache=$templateCache.get(partial),fromTemplateCache?fromTemplateCache:(src=PathSvc.directivePartial(partial).$$unwrapTrustedValue(),$http.get(src,{cache:$templateCache}).then(function(response){return response.data}))},renderTemplate=function(scope,element,design_mode,template){return $q.when(getTemplate(template)).then(function(template){return element.html(template).show(),design_mode&&element.append("<style widget_css scoped></style>"),$compile(element.contents())(scope)})},link=function(scope,element,attrs){var config;if(config=scope.$eval(attrs.bbAdminBooking),config||(config={}),config.admin=!0,attrs.companyId||(config.company_id?attrs.companyId=config.company_id:scope.company&&(attrs.companyId=scope.company.id)),attrs.companyId)return BBModel.Admin.Company.$query(attrs).then(function(company){return scope.company=company,scope.initWidget(config),renderTemplate(scope,element,config.design_mode,config.template)})},{link:link,controller:"BBCtrl"}})}.call(this),function(){angular.module("BBAdminBooking").directive("bbAdminBookingPopup",function(AdminBookingPopup){return{restrict:"A",link:function(scope,element,attrs){return element.bind("click",function(){return scope.open()})},controller:function($scope){return $scope.open=function(){return AdminBookingPopup.open()}}}})}.call(this),function(){angular.module("BBAdminBooking").directive("bbAdminMemberBookingsTable",function($uibModal,$log,$rootScope,AdminBookingService,$compile,$templateCache,ModalForm,BBModel,Dialog,AdminMoveBookingPopup){var controller;return controller=function($scope,$uibModal){var getBookings,updateBooking;if($scope.loading=!0,$scope.fields||($scope.fields=["date_order","details"]),$scope.$watch("member",function(member){if(null!=member)return getBookings($scope,member)}),$scope.edit=function(id){var booking;return booking=_.find($scope.booking_models,function(b){return b.id===id}),booking.$getAnswers().then(function(answers){var answer,j,len,ref;for(ref=answers.answers,j=0,len=ref.length;j<len;j++)answer=ref[j],booking["question"+answer.question_id]=answer.value;return ModalForm.edit({model:booking,title:"Booking Details",templateUrl:"edit_booking_modal_form.html",success:function(response){var item_defaults;return"string"!=typeof response?updateBooking(booking):"move"===response?(item_defaults={person:booking.person_id,resource:booking.resource_id},AdminMoveBookingPopup.open({item_defaults:item_defaults,company_id:booking.company_id,booking_id:booking.id,success:function(_this){return function(model){return updateBooking(booking)}}(this),fail:function(_this){return function(model){return updateBooking(booking)}}(this)})):void 0}})})},updateBooking=function(b){return b.$refetch().then(function(b){var i;return b=new BBModel.Admin.Booking(b),i=_.indexOf($scope.booking_models,function(b){return b.id===id}),$scope.booking_models[i]=b,$scope.setRows()})},$scope.cancel=function(id){var booking,modalInstance;return booking=_.find($scope.booking_models,function(b){return b.id===id}),modalInstance=$uibModal.open({templateUrl:"member_bookings_table_cancel_booking.html",controller:function($scope,$uibModalInstance,booking){return $scope.booking=booking,$scope.booking.notify=!0,$scope.ok=function(){return $uibModalInstance.close($scope.booking)},$scope.close=function(){return $uibModalInstance.dismiss()}},scope:$scope,resolve:{booking:function(){return booking}}}),modalInstance.result.then(function(booking){var params;return $scope.loading=!0,params={notify:booking.notify},booking.$post("cancel",params).then(function(){var i;return i=_.findIndex($scope.booking_models,function(b){return console.log(b),b.id===booking.id}),$scope.booking_models.splice(i,1),$scope.setRows(),$scope.loading=!1})})},$scope.setRows=function(){return $scope.bookings=_.map($scope.booking_models,function(booking){return{id:booking.id,date:moment(booking.datetime).format("YYYY-MM-DD"),date_order:moment(booking.datetime).format("x"),datetime:moment(booking.datetime),details:booking.full_describe}})},getBookings=function($scope,member){var params;return params={start_date:$scope.startDate.format("YYYY-MM-DD"),start_time:$scope.startTime?$scope.startTime.format("HH:mm"):void 0,end_date:$scope.endDate?$scope.endDate.format("YYYY-MM-DD"):void 0,end_time:$scope.endTime?$scope.endTime.format("HH:mm"):void 0,company:$rootScope.bb.company,url:$rootScope.bb.api_url,client_id:member.id},console.log(params),AdminBookingService.query(params).then(function(bookings){return $scope.booking_models=bookings.items,$scope.setRows(),$scope.loading=!1},function(err){return $log.error(err.data),$scope.loading=!1})},$scope.startDate||($scope.startDate=moment()),$scope.orderBy=$scope.defaultOrder,null==$scope.orderBy&&($scope.orderBy="date_order"),$scope.now=moment(),$scope.member)return getBookings($scope,$scope.member)},{controller:controller,templateUrl:"admin_member_bookings_table.html",scope:{apiUrl:"@",fields:"=?",member:"=",startDate:"=?",startTime:"=?",endDate:"=?",endTime:"=?",defaultOrder:"=?"}}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").directive("bbAdminMoveBooking",function($log,$compile,$q,PathSvc,$templateCache,$http,BBModel,$rootScope){var getTemplate,link,renderTemplate;return getTemplate=function(template){var fromTemplateCache,partial,src;return partial=template?template:"main",fromTemplateCache=$templateCache.get(partial),fromTemplateCache?fromTemplateCache:(src=PathSvc.directivePartial(partial).$$unwrapTrustedValue(),$http.get(src,{cache:$templateCache}).then(function(response){return response.data}))},renderTemplate=function(scope,element,design_mode,template){return $q.when(getTemplate(template)).then(function(template){return element.html(template).show(),design_mode&&element.append("<style widget_css scoped></style>"),$compile(element.contents())(scope),scope.decideNextPage("calendar")})},link=function(scope,element,attrs){var config;if(config=scope.$eval(attrs.bbAdminMoveBooking),config||(config={}),config.no_route=!0,config.admin=!0,config.template||(config.template="main"),attrs.companyId||(config.company_id?attrs.companyId=config.company_id:scope.company&&(attrs.companyId=scope.company.id)),attrs.companyId)return BBModel.Admin.Company.$query(attrs).then(function(company){return scope.initWidget(config),company.getBooking(config.booking_id).then(function(booking){var client_prom,new_item,proms;return scope.company=company,scope.bb.moving_booking=booking,scope.quickEmptybasket(),proms=[],new_item=new BBModel.BasketItem(booking,scope.bb),new_item.setSrcBooking(booking,scope.bb),new_item.clearDateTime(),new_item.ready=!1,booking.$has("client")&&(client_prom=booking.$get("client"),proms.push(client_prom),client_prom.then(function(_this){return function(client){return scope.setClient(new BBModel.Client(client))}}(this))),Array.prototype.push.apply(proms,new_item.promises),scope.bb.basket.addItem(new_item),scope.setBasketItem(new_item),$q.all(proms).then(function(){return $rootScope.$broadcast("booking:move"),scope.setLoaded(scope),renderTemplate(scope,element,config.design_mode,config.template)},function(err){return scope.setLoaded(scope),failMsg()})})})},{link:link,controller:"BBCtrl"}})}.call(this),function(){angular.module("BBAdminBooking").factory("AdminMoveBookingPopup",function($uibModal,$timeout,$document){return{open:function(config){var modal;return modal=$uibModal.open({appendTo:angular.element($document[0].getElementById("bb")),size:"lg",controller:function($scope,$uibModalInstance,config,$window,AdminBookingOptions){var base;return $scope.Math=$window.Math,$scope.bb&&$scope.bb.current_item&&delete $scope.bb.current_item,$scope.config=angular.extend({clear_member:!0,template:"main"},config),$scope.company&&((base=$scope.config).company_id||(base.company_id=$scope.company.id)),$scope.config.item_defaults=angular.extend({merge_resources:AdminBookingOptions.merge_resources,merge_people:AdminBookingOptions.merge_people},config.item_defaults),$scope.cancel=function(){return $uibModalInstance.dismiss("cancel")}},templateUrl:"admin_move_booking_popup.html",resolve:{config:function(){return config}}}),modal.result.then(function(result){return config.success&&config.success(),result},function(err){return config.fail&&config.fail(),err})}}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").directive("bbBlockTime",function(){return{scope:!0,restrict:"A",controller:function($scope,$element,$attrs,BBModel,BookingCollections,$rootScope,BBAssets){var blockSuccess,isValid;return $scope.resources=[],BBAssets($scope.bb.company).then(function(assets){return $scope.resources=assets}),moment.isMoment($scope.bb.to_datetime)||($scope.bb.to_datetime=moment($scope.bb.to_datetime)),moment.isMoment($scope.bb.from_datetime)||($scope.bb.from_datetime=moment($scope.bb.from_datetime)),moment.isMoment($scope.bb.to_datetime)||($scope.bb.to_datetime=moment($scope.bb.to_datetime)),$scope.bb.min_date&&!moment.isMoment($scope.bb.min_date)&&($scope.bb.min_date=moment($scope.bb.min_date)),$scope.bb.max_date&&!moment.isMoment($scope.bb.max_date)&&($scope.bb.max_date=moment($scope.bb.max_date)),$scope.all_day=!1,$scope.hideBlockAllDay=Math.abs($scope.bb.from_datetime.diff($scope.bb.to_datetime,"days"))>0,null!=$scope.bb.current_item.person&&null!=$scope.bb.current_item.person.id&&($scope.picked_resource=$scope.bb.current_item.person.id+"_p"),null!=$scope.bb.current_item.resource&&null!=$scope.bb.current_item.resource.id&&($scope.picked_resource=$scope.bb.current_item.resource.id+"_r"),$scope.bb.company_settings&&$scope.bb.company_settings.$has("block_questions")&&$scope.bb.company_settings.$get("block_questions",{}).then(function(_this){return function(details){return $scope.block_questions=new BBModel.ItemDetails(details)}}(this)),$scope.changeResource=function(){var parts;if(null!=$scope.picked_resource)return $scope.resourceError=!1,parts=$scope.picked_resource.split("_"),angular.forEach($scope.resources,function(value,key){value.identifier===$scope.picked_resource&&("p"===parts[1]?$scope.bb.current_item.person=value:"r"===parts[1]&&($scope.bb.current_item.resource=value))})},$scope.blockTime=function(){var params;return!!isValid()&&(params={start_time:$scope.bb.from_datetime,end_time:$scope.bb.to_datetime,booking:!0,allday:$scope.all_day},$scope.block_questions&&(params.questions=$scope.block_questions.getPostData()),"object"==typeof $scope.bb.current_item.person?BBModel.Admin.Person.$block($scope.bb.company,$scope.bb.current_item.person,params).then(function(response){return blockSuccess(response)}):"object"==typeof $scope.bb.current_item.resource?BBModel.Admin.Resource.$block($scope.bb.company,$scope.bb.current_item.resource,params).then(function(response){return blockSuccess(response)}):void 0)},isValid=function(){return $scope.resourceError=!1,"object"!=typeof $scope.bb.current_item.person&&"object"!=typeof $scope.bb.current_item.resource&&($scope.resourceError=!0),!("object"!=typeof $scope.bb.current_item.person&&"object"!=typeof $scope.bb.current_item.resource||null==$scope.bb.from_datetime||!$scope.bb.to_datetime)},blockSuccess=function(response){return $rootScope.$broadcast("refetchBookings"),$scope.cancel()},$scope.changeBlockDay=function(blockDay){return $scope.all_day=blockDay}}}})}.call(this),function(){angular.module("BB.Filters").filter("in_the_future",function(){return function(slots){var now_tod,tim;return tim=moment(),now_tod=tim.minutes()+60*tim.hours(),_.filter(slots,function(x){return x.time>now_tod})}}),angular.module("BB.Filters").filter("tod_from_now",function(){return function(tod,options){var hour_string,hours,min_string,mins,now_tod,seperator,str,tim,v,val;return tim=moment(),now_tod=tim.minutes()+60*tim.hours(),v=tod-now_tod,hour_string=options&&options.abbr_units?"hr":"hour",min_string=options&&options.abbr_units?"min":"minute",seperator=options&&angular.isString(options.seperator)?options.seperator:"and",val=parseInt(v),val<60?val+" "+min_string+"s":(hours=parseInt(val/60),mins=val%60,0===mins?1===hours?"1 "+hour_string:hours+" "+hour_string+"s":(str=hours+" "+hour_string,hours>1&&(str+="s"),0===mins?str:(seperator.length>0&&(str+=" "+seperator),str+=" "+mins+" "+min_string+"s")))}})}.call(this),function(){"use strict";angular.module("BB.Services").provider("AdminBookingOptions",function(){var options;options={merge_resources:!0,merge_people:!0,day_view:"multi_day",mobile_pattern:null},this.setOption=function(option,value){options.hasOwnProperty(option)&&(options[option]=value)},this.$get=function(){return options}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").factory("AdminBookingPopup",function($uibModal,$timeout,$document){return{open:function(config){return $uibModal.open({size:"lg",appendTo:angular.element($document[0].getElementById("bb")),controller:function($scope,$uibModalInstance,config,$window,AdminBookingOptions){var base;return $scope.Math=$window.Math,$scope.bb&&$scope.bb.current_item&&delete $scope.bb.current_item,$scope.config=angular.extend({clear_member:!0,template:"main"},config),$scope.company&&((base=$scope.config).company_id||(base.company_id=$scope.company.id)),$scope.config.item_defaults=angular.extend({merge_resources:AdminBookingOptions.merge_resources,merge_people:AdminBookingOptions.merge_people},config.item_defaults),$scope.cancel=function(){return $uibModalInstance.dismiss("cancel")}},templateUrl:"admin_booking_popup.html",resolve:{config:function(){return config}}})}}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").factory("BBAssets",function($q,BBModel){return function(company){var assets,delay,promises;return delay=$q.defer(),promises=[],assets=[],company.$has("people")&&promises.push(BBModel.Admin.Person.$query({company:company,embed:"immediate_schedule"}).then(function(people){var i,len,p;for(i=0,len=people.length;i<len;i++)p=people[i],p.title=p.name,null==p.identifier&&(p.identifier=p.id+"_p"),p.group="Staff";return assets=_.union(assets,people)})),company.$has("resources")&&promises.push(BBModel.Admin.Resource.$query({company:company,embed:"immediate_schedule"}).then(function(resources){var i,len,r;for(i=0,len=resources.length;i<len;i++)r=resources[i],r.title=r.name,null==r.identifier&&(r.identifier=r.id+"_r"),r.group="Resources ";return assets=_.union(assets,resources)})),$q.all(promises).then(function(){return assets.sort(function(a,b){return"person"===a.type&&"resource"===b.type?-1:"resource"===a.type&&"person"===b.type?1:a.name>b.name?1:a.name<b.name?-1:0}),delay.resolve(assets)}),delay.promise}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").factory("ProcessAssetsFilter",function(){return function(string){var assets;return assets=[],"undefined"==typeof string||""===string?assets:angular.forEach(string.split(","),function(value){return assets.push(parseInt(decodeURIComponent(value)))})}})}.call(this),function(){"use strict";angular.module("BBAdminBooking").config(function($translateProvider){"ngInject";var translations;translations={ADMIN_BOOKING:{AVAILABILITY:{ANY_PERSON:"Any person",ANY_RESOURCE:"Any resource",BACK:"Back",BOOK:"Book",SELECT:"Select",CALENDAR:"Calendar",NOT_AVAILABLE:"Time not available",CONFLICT_EXISTS:"There's an availability conflict",CONFLICT_EXISTS_WITH_PERSON:"with {{ person_name }}",CONFLICT_EXISTS_IN_RESOURCE:"in {{ resource_name }}",CONFLICT_RESULT_OF:"This can be the result of:",CONFLICT_REASON_ALREADY_BOOKED:"The Staff/Resource being booked or blocked already",CONFLICT_REASON_NOT_ENOUGH_TIME:"Not enough available time to complete the booking before an existing one starts",CONFLICT_REASON_OUTSIDE:"The selected time being outside of the {{booking_time_step | time_period}} booking time step for {{service_name}}.",CONFLICT_ANOTHER_TIME_OR_OVERBOOK:"You can either use the calendar to choose another time or overbook.",DAY:"Day",DAY_3:"3 day",DAY_5:"5 day",DAY_7:"7 day",FIRST_FOUND:"First available",NOT_FOUND:"No availability found",NOT_FOUND_TRY_DIFFERENT_TIME_RANGE:"No availability found, try a different time-range",OVERBOOK:"Overbook",OVERBOOK_BTN:"Overbook",OVERBOOK_WARNING:"Overbooking ignores booking time step and availability constraints to make a booking.",FILTER_BY:"Filter by:",SELECT_A_TIME:"Select a time",SELECT_A_TIME_FOR_BOOKING:"Select a time for the booking."},CALENDAR:{AFTERNOON:"Afternoon",EVENING:"Evening",MORNING:"Morning"},CUSTOMER:{BACK_BTN:"Back",CLEAR:"Clear",CREATE:"Create Customer",CREATE_BTN:"Create Customer",CREATE_ONE_INSTEAD:"Create one instead",EMAIL:"Email:",FIRST_NAME:"First name:",LAST_NAME:"Last name:",MOBILE:"Mobile:",NO_RESULTS_FOUND:"No results found",NUMBER:"{CUSTOMERS_NUMBER, plural, =0{no customers} =1{one customer} other{{CUSTOMERS_NUMBER} customers}} found",SEARCH_BY:"Search by email or name",SELECT_HEADLINE:"Select a customer",SELECT_BTN:"Select",SORT_BY:"Sort by:",SORT_BY_EMAIL:"Email",SORT_BY_FIRST_NAME:"First Name",SORT_BY_LAST_NAME:"Last Name"},QUICK_PICK:{BLOCK_WHOLE_DAY:"Block whole day",BLOCK_TIME:"Block time",BOOK:"Book",NEXT:"Next",FOR:"For",FROM:"From",MAKE_BOOKING:"Make booking",NO:"No",SELECT:"-- select --",SELECT_A_SERVICE:"-- select a service --",SERVICE:"Service",TO:"To",YES:"Yes"}}},$translateProvider.translations("en",translations)})}.call(this);